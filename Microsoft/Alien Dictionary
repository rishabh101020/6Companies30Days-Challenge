class Solution{
    public:
    
    string findOrder(string d[], int n, int k) {
        
        vector<int> adj[k];
        vector<int> v(k,0);
        queue<int> q;
        
        for(int i=0;i<n-1;i++)
        {
            int j=0,k=0;
            
            while(j<d[i].size() && k < d[i+1].size() && d[i][j] == d[i+1][k])
            {
                j++;
                k++;
            }
            
            if(j<d[i].size() && k < d[i+1].size())
            {
                adj[d[i][j] - 'a'].push_back(d[i+1][k] - 'a');
                
                v[d[i+1][k] - 'a']++;
            }
        }
        
        string s;
        
        for(int i=0;i<k;i++)
        {
            if(v[i] == 0)
                q.push(i);
        }
        
        while(!q.empty())
        {
            int a = q.front();
            q.pop();
            
            s.push_back((char)(a+'a'));
            
            for(int i=0;i<adj[a].size();i++)
            {
                v[adj[a][i]] --;
                
                if(v[adj[a][i]] ==0)
                    q.push(adj[a][i]);
            }
        }
        
        return s;
    }
};
