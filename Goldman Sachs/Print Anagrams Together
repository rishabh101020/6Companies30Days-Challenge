//Initial Template for C++
#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;


 // } Driver Code Ends
//User function Template for C++

class Solution{
  public:
    vector<vector<string> > Anagrams(vector<string>& v) {
        map<map<char,int>,vector<int>> m;
        
        for(int i=0;i< v.size();i++)
        {
            map<char,int> a;
            for(auto j:v[i])
                a[j]++;
                
            // if(m.find(a) != m.end())
            m[a].push_back(i);
            
        }
        
        vector<vector<string> >res;
        
        for(auto i:m)
        {
            // vector<string> ans = i.second;
            // res.push_back(ans);
            
            vector<string> ans;
            
            for(auto j:i.second)
            {
                ans.push_back(v[j]);
            }
            
            res.push_back(ans);
        }
        
        return res;
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<string> string_list(n);
        for (int i = 0; i < n; ++i)
            cin>>string_list[i]; 
        Solution ob;
        vector<vector<string> > result = ob.Anagrams(string_list);
        sort(result.begin(),result.end());
        for (int i = 0; i < result.size(); i++)
        {
            for(int j=0; j < result[i].size(); j++)
            {
                cout<<result[i][j]<<" ";
            }
            cout<<"\n";
        }
    }

    return 0;
}
  // } Driver Code Ends
